<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--1.静态资源过滤  http：用于定义相关权限控制-->
    <security:http pattern="/css/**" security="none" />
    <security:http pattern="/img/**" security="none" />
    <security:http pattern="/js/**" security="none" />
    <security:http pattern="/plugins/**" security="none" />
    <security:http pattern="/login.html" security="none" />

    <!--2.配置拦截规则-->
    <security:http auto-config="true" use-expressions="true">
        <!--2.1设置所有路径登陆后才可以访问-->
        <security:intercept-url pattern="/**" access="isAuthenticated()" />
        <!--2.2配置页面嵌套规则，访问其它页面，把其它页面的内容展示在这个页面上 SAMEORIGIN: 同域可以访问,即嵌套的页面与本网站同源-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN" />
        </security:headers>
        <!--2.3登录配置-->
        <security:form-login
            login-page="/login.html"
            login-processing-url="/login.do"
            username-parameter="username"
            password-parameter="password"
            default-target-url="/pages/main.html"
            authentication-failure-url="/fail.html"
            always-use-default-target="true" />
        <!--2.4关闭跨域访问限制-->
        <security:csrf disabled="true" />
        <!--2.5退出配置-->
        <security:logout logout-success-url="/login.html" invalidate-session="true" logout-url="/logout.do" />
    </security:http>

    <!--3.认证管理器：定义登录账号名和密码，并授予访问的角色、权限-->
    <security:authentication-manager>
        <!--认证提供者 >  user-service-ref 指向spring容器中一个bean对象, 实现这个UserDetailsService的对象, 提供用户的名称、密码、权限集合-->
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <!--指定密码加密策略-->
            <security:password-encoder ref="encoder" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!--4.开启权限控制注解支持-->
    <security:global-method-security pre-post-annotations="enabled" />

</beans>